{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wNELJHNRzBsP","executionInfo":{"status":"ok","timestamp":1710928758079,"user_tz":240,"elapsed":14642,"user":{"displayName":"Meixi Peng","userId":"16257172323229150555"}},"outputId":"5d5ed1aa-c447-430b-cd40-9163faae0ff0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: snowflake-snowpark-python in /usr/local/lib/python3.10/dist-packages (1.13.0)\n","Requirement already satisfied: setuptools>=40.6.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python) (67.7.2)\n","Requirement already satisfied: wheel in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python) (0.43.0)\n","Requirement already satisfied: snowflake-connector-python<4.0.0,>=3.6.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python) (3.7.1)\n","Requirement already satisfied: typing-extensions<5.0.0,>=4.1.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python) (4.10.0)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python) (6.0.1)\n","Requirement already satisfied: cloudpickle!=2.1.0,!=2.2.0,<=2.2.1,>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python) (2.2.1)\n","Requirement already satisfied: asn1crypto<2.0.0,>0.24.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (1.5.1)\n","Requirement already satisfied: cffi<2.0.0,>=1.9 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (1.16.0)\n","Requirement already satisfied: cryptography<43.0.0,>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (42.0.5)\n","Requirement already satisfied: pyOpenSSL<25.0.0,>=16.2.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (24.1.0)\n","Requirement already satisfied: pyjwt<3.0.0 in /usr/lib/python3/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (2.3.0)\n","Requirement already satisfied: pytz in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (2023.4)\n","Requirement already satisfied: requests<3.0.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (2.31.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (24.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (3.6)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (2024.2.2)\n","Requirement already satisfied: filelock<4,>=3.5 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (3.13.1)\n","Requirement already satisfied: sortedcontainers>=2.4.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (2.4.0)\n","Requirement already satisfied: platformdirs<4.0.0,>=2.6.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (3.11.0)\n","Requirement already satisfied: tomlkit in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (0.12.4)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi<2.0.0,>=1.9->snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (2.21)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0->snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python) (2.0.7)\n","Requirement already satisfied: snowflake-snowpark-python[pandas] in /usr/local/lib/python3.10/dist-packages (1.13.0)\n","Requirement already satisfied: setuptools>=40.6.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python[pandas]) (67.7.2)\n","Requirement already satisfied: wheel in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python[pandas]) (0.43.0)\n","Requirement already satisfied: snowflake-connector-python<4.0.0,>=3.6.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python[pandas]) (3.7.1)\n","Requirement already satisfied: typing-extensions<5.0.0,>=4.1.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python[pandas]) (4.10.0)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python[pandas]) (6.0.1)\n","Requirement already satisfied: cloudpickle!=2.1.0,!=2.2.0,<=2.2.1,>=1.6.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-snowpark-python[pandas]) (2.2.1)\n","Requirement already satisfied: asn1crypto<2.0.0,>0.24.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (1.5.1)\n","Requirement already satisfied: cffi<2.0.0,>=1.9 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (1.16.0)\n","Requirement already satisfied: cryptography<43.0.0,>=3.1.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (42.0.5)\n","Requirement already satisfied: pyOpenSSL<25.0.0,>=16.2.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (24.1.0)\n","Requirement already satisfied: pyjwt<3.0.0 in /usr/lib/python3/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (2.3.0)\n","Requirement already satisfied: pytz in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (2023.4)\n","Requirement already satisfied: requests<3.0.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (2.31.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (24.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (3.6)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (2024.2.2)\n","Requirement already satisfied: filelock<4,>=3.5 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (3.13.1)\n","Requirement already satisfied: sortedcontainers>=2.4.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (2.4.0)\n","Requirement already satisfied: platformdirs<4.0.0,>=2.6.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (3.11.0)\n","Requirement already satisfied: tomlkit in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (0.12.4)\n","Requirement already satisfied: pandas<3.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (1.5.3)\n","Requirement already satisfied: pyarrow in /usr/local/lib/python3.10/dist-packages (from snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (14.0.2)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi<2.0.0,>=1.9->snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (2.21)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas<3.0.0,>=1.0.0->snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (2.8.2)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas<3.0.0,>=1.0.0->snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (1.25.2)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3.0.0->snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (2.0.7)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas<3.0.0,>=1.0.0->snowflake-connector-python<4.0.0,>=3.6.0->snowflake-snowpark-python[pandas]) (1.16.0)\n"]}],"source":["!pip install snowflake-snowpark-python\n","!pip install \"snowflake-snowpark-python[pandas]\""]},{"cell_type":"code","source":["from snowflake.connector.pandas_tools import write_pandas\n","from snowflake.snowpark import functions as F\n","from snowflake.snowpark.functions import avg, sum, col,lit\n","from snowflake.snowpark import Session\n","import snowflake.connector\n","from snowflake.snowpark.functions import udf\n","from snowflake.snowpark.types import DateType, FloatType\n","\n"],"metadata":{"id":"bv-hfPikB2Ce"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import files\n","import pandas as pd\n","import numpy as np\n","import datetime"],"metadata":{"id":"6FIoVD3K56Y-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["connection_parameters = {\n","    \"account\": \"YEZEPEO-VNSHARED\",\n","    \"user\": \"VNSHARED\",\n","    \"password\": \"Stratify2024!\",\n","    \"role\": \"SYSADMIN\",\n","    \"warehouse\": \"ANALYSIS\",\n","    \"database\":\"VN_SHARED_DB\"\n","    #\"schema\": \"<your snowflake schema>\",  # optional\n","}"],"metadata":{"id":"PJOJUAbQzi0h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_session = Session.builder.configs(connection_parameters).create()"],"metadata":{"id":"pQ1GxqoozjEF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import snowflake.snowpark as snowpark\n","from snowflake.snowpark.functions import col\n","from snowflake.snowpark.dataframe_reader import *\n","from snowflake.snowpark.functions import *\n"],"metadata":{"id":"a5To1OqAzjHM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_v=new_session.sql('select * from TBPAGOS_DOCUMENTOSCOBRO_CONSOLIDADOEXTENDIDO_TS_SHARED limit 1000')"],"metadata":{"id":"PUHy5pJozjNM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_v.to_pandas()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"7Az4KBuPzjS9","executionInfo":{"status":"ok","timestamp":1710928771881,"user_tz":240,"elapsed":710,"user":{"displayName":"Meixi Peng","userId":"16257172323229150555"}},"outputId":"dc2cffbe-5538-4203-dd70-1fa7c8a101ec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            FechaExtraccion  NumeroDocumento  NumeroFolio FechaEmision  \\\n","0   2024-01-15 13:52:32.627     6.560029e+10   12408109.0   2009-10-07   \n","1   2024-01-15 13:52:32.627     6.560029e+10   12407754.0   2009-10-07   \n","2   2024-01-15 13:52:32.627     6.560029e+10   12407371.0   2009-10-07   \n","3   2024-01-15 13:52:32.627     6.560029e+10   12462086.0   2009-10-13   \n","4   2024-01-15 13:52:32.627     6.560029e+10   12462086.0   2009-10-13   \n","..                      ...              ...          ...          ...   \n","995 2024-01-15 13:52:32.627     1.240140e+10   26839667.0   2013-04-12   \n","996 2024-01-15 13:52:32.627     1.240140e+10   26884482.0   2013-04-18   \n","997 2024-01-15 13:52:32.627     9.711006e+11   32255894.0   2023-09-11   \n","998 2024-01-15 13:52:32.627     9.711006e+11   32255894.0   2023-09-11   \n","999 2024-01-15 13:52:32.627     9.711006e+11   32255894.0   2023-09-11   \n","\n","    FechaVencimiento FechaRegistro BusinessPartnerId CuentaContrato  \\\n","0         2009-10-26    2009-10-06        0010567165   001100322748   \n","1         2009-10-26    2009-10-06        0010650040   001100405715   \n","2         2009-10-26    2009-10-06        0011495805   001101038992   \n","3         2009-10-30    2009-10-12        0010453392   001100209082   \n","4         2009-10-30    2009-10-12        0010453392   001100209082   \n","..               ...           ...               ...            ...   \n","995       2013-04-29    2013-04-11        0011230917   001100844554   \n","996       2013-05-05    2013-04-17        0010225936   001000178446   \n","997       2023-09-26    2023-09-12        0010755893   001100511555   \n","998       2023-09-26    2023-09-12        0010755893   001100511555   \n","999       2023-09-26    2023-09-12        0010755893   001100511555   \n","\n","    ClaveReconciliacion Cabecera_FechaHoraCreacion  ... TramoMoraCliente  \\\n","0          09279FA020AW        2021-04-22 00:57:39  ...             Pago   \n","1          09279FA020AW        2021-04-22 00:57:39  ...             Pago   \n","2          09279FA020AW        2021-04-22 00:57:39  ...      [361+] Dias   \n","3          09284FA030BA        2021-04-22 00:59:37  ...             Pago   \n","4          09284FA030BA        2021-04-22 00:59:37  ...             Pago   \n","..                  ...                        ...  ...              ...   \n","995        13100FA031AJ        2021-04-23 06:58:15  ...         [Al Dia]   \n","996        13106FA040AE        2021-04-23 07:01:18  ...         [Al Dia]   \n","997        23254FA030CG        2023-09-13 06:14:54  ...      [361+] Dias   \n","998        23254FA030CG        2023-09-13 06:14:54  ...      [361+] Dias   \n","999        23254FA030CG        2023-09-13 06:14:54  ...      [361+] Dias   \n","\n","           TramoMora  Inhabilitado  Concesionaria TipoCliente  TipoOperacion  \\\n","0               Pago   Cliente Tag            AVN     Natural          Peaje   \n","1               Pago   Cliente Tag            AVN     Natural          Peaje   \n","2               Pago   Cliente Tag            AVN     Natural      Intereses   \n","3               Pago   Cliente Tag            AVN     Natural          Peaje   \n","4               Pago   Cliente Tag            TSC     Natural          Peaje   \n","..               ...           ...            ...         ...            ...   \n","995             Pago   Cliente Tag            AVN     Natural          Peaje   \n","996             Pago   Cliente Tag            AVN     Natural          Peaje   \n","997  [91 a 180] Dias   Cliente Tag            TSC     Natural      Intereses   \n","998  [91 a 180] Dias   Cliente Tag            AVN     Natural      Intereses   \n","999  [91 a 180] Dias   Cliente Tag            AVN     Natural      Intereses   \n","\n","     TipoDocumento TipoProducto StatusCompensacion StatusCompensacionTmp  \n","0    Boleta Exenta          Tag             Pagada                Pagada  \n","1    Boleta Exenta          Tag             Pagada                Pagada  \n","2    Boleta Exenta          Tag             Pagada                Pagada  \n","3    Boleta Exenta          Tag             Pagada                Pagada  \n","4    Boleta Exenta          Tag             Pagada                Pagada  \n","..             ...          ...                ...                   ...  \n","995  Boleta Exenta          Tag             Pagada                Pagada  \n","996  Boleta Exenta          Tag             Pagada                Pagada  \n","997         Boleta          Tag             Impaga                Impaga  \n","998         Boleta          Tag             Impaga                Impaga  \n","999         Boleta          Tag             Impaga                Impaga  \n","\n","[1000 rows x 39 columns]"],"text/html":["\n","  <div id=\"df-5a505c25-27b0-46d2-9fd9-97669da8629a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>FechaExtraccion</th>\n","      <th>NumeroDocumento</th>\n","      <th>NumeroFolio</th>\n","      <th>FechaEmision</th>\n","      <th>FechaVencimiento</th>\n","      <th>FechaRegistro</th>\n","      <th>BusinessPartnerId</th>\n","      <th>CuentaContrato</th>\n","      <th>ClaveReconciliacion</th>\n","      <th>Cabecera_FechaHoraCreacion</th>\n","      <th>...</th>\n","      <th>TramoMoraCliente</th>\n","      <th>TramoMora</th>\n","      <th>Inhabilitado</th>\n","      <th>Concesionaria</th>\n","      <th>TipoCliente</th>\n","      <th>TipoOperacion</th>\n","      <th>TipoDocumento</th>\n","      <th>TipoProducto</th>\n","      <th>StatusCompensacion</th>\n","      <th>StatusCompensacionTmp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2024-01-15 13:52:32.627</td>\n","      <td>6.560029e+10</td>\n","      <td>12408109.0</td>\n","      <td>2009-10-07</td>\n","      <td>2009-10-26</td>\n","      <td>2009-10-06</td>\n","      <td>0010567165</td>\n","      <td>001100322748</td>\n","      <td>09279FA020AW</td>\n","      <td>2021-04-22 00:57:39</td>\n","      <td>...</td>\n","      <td>Pago</td>\n","      <td>Pago</td>\n","      <td>Cliente Tag</td>\n","      <td>AVN</td>\n","      <td>Natural</td>\n","      <td>Peaje</td>\n","      <td>Boleta Exenta</td>\n","      <td>Tag</td>\n","      <td>Pagada</td>\n","      <td>Pagada</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2024-01-15 13:52:32.627</td>\n","      <td>6.560029e+10</td>\n","      <td>12407754.0</td>\n","      <td>2009-10-07</td>\n","      <td>2009-10-26</td>\n","      <td>2009-10-06</td>\n","      <td>0010650040</td>\n","      <td>001100405715</td>\n","      <td>09279FA020AW</td>\n","      <td>2021-04-22 00:57:39</td>\n","      <td>...</td>\n","      <td>Pago</td>\n","      <td>Pago</td>\n","      <td>Cliente Tag</td>\n","      <td>AVN</td>\n","      <td>Natural</td>\n","      <td>Peaje</td>\n","      <td>Boleta Exenta</td>\n","      <td>Tag</td>\n","      <td>Pagada</td>\n","      <td>Pagada</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2024-01-15 13:52:32.627</td>\n","      <td>6.560029e+10</td>\n","      <td>12407371.0</td>\n","      <td>2009-10-07</td>\n","      <td>2009-10-26</td>\n","      <td>2009-10-06</td>\n","      <td>0011495805</td>\n","      <td>001101038992</td>\n","      <td>09279FA020AW</td>\n","      <td>2021-04-22 00:57:39</td>\n","      <td>...</td>\n","      <td>[361+] Dias</td>\n","      <td>Pago</td>\n","      <td>Cliente Tag</td>\n","      <td>AVN</td>\n","      <td>Natural</td>\n","      <td>Intereses</td>\n","      <td>Boleta Exenta</td>\n","      <td>Tag</td>\n","      <td>Pagada</td>\n","      <td>Pagada</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2024-01-15 13:52:32.627</td>\n","      <td>6.560029e+10</td>\n","      <td>12462086.0</td>\n","      <td>2009-10-13</td>\n","      <td>2009-10-30</td>\n","      <td>2009-10-12</td>\n","      <td>0010453392</td>\n","      <td>001100209082</td>\n","      <td>09284FA030BA</td>\n","      <td>2021-04-22 00:59:37</td>\n","      <td>...</td>\n","      <td>Pago</td>\n","      <td>Pago</td>\n","      <td>Cliente Tag</td>\n","      <td>AVN</td>\n","      <td>Natural</td>\n","      <td>Peaje</td>\n","      <td>Boleta Exenta</td>\n","      <td>Tag</td>\n","      <td>Pagada</td>\n","      <td>Pagada</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2024-01-15 13:52:32.627</td>\n","      <td>6.560029e+10</td>\n","      <td>12462086.0</td>\n","      <td>2009-10-13</td>\n","      <td>2009-10-30</td>\n","      <td>2009-10-12</td>\n","      <td>0010453392</td>\n","      <td>001100209082</td>\n","      <td>09284FA030BA</td>\n","      <td>2021-04-22 00:59:37</td>\n","      <td>...</td>\n","      <td>Pago</td>\n","      <td>Pago</td>\n","      <td>Cliente Tag</td>\n","      <td>TSC</td>\n","      <td>Natural</td>\n","      <td>Peaje</td>\n","      <td>Boleta Exenta</td>\n","      <td>Tag</td>\n","      <td>Pagada</td>\n","      <td>Pagada</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>2024-01-15 13:52:32.627</td>\n","      <td>1.240140e+10</td>\n","      <td>26839667.0</td>\n","      <td>2013-04-12</td>\n","      <td>2013-04-29</td>\n","      <td>2013-04-11</td>\n","      <td>0011230917</td>\n","      <td>001100844554</td>\n","      <td>13100FA031AJ</td>\n","      <td>2021-04-23 06:58:15</td>\n","      <td>...</td>\n","      <td>[Al Dia]</td>\n","      <td>Pago</td>\n","      <td>Cliente Tag</td>\n","      <td>AVN</td>\n","      <td>Natural</td>\n","      <td>Peaje</td>\n","      <td>Boleta Exenta</td>\n","      <td>Tag</td>\n","      <td>Pagada</td>\n","      <td>Pagada</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>2024-01-15 13:52:32.627</td>\n","      <td>1.240140e+10</td>\n","      <td>26884482.0</td>\n","      <td>2013-04-18</td>\n","      <td>2013-05-05</td>\n","      <td>2013-04-17</td>\n","      <td>0010225936</td>\n","      <td>001000178446</td>\n","      <td>13106FA040AE</td>\n","      <td>2021-04-23 07:01:18</td>\n","      <td>...</td>\n","      <td>[Al Dia]</td>\n","      <td>Pago</td>\n","      <td>Cliente Tag</td>\n","      <td>AVN</td>\n","      <td>Natural</td>\n","      <td>Peaje</td>\n","      <td>Boleta Exenta</td>\n","      <td>Tag</td>\n","      <td>Pagada</td>\n","      <td>Pagada</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>2024-01-15 13:52:32.627</td>\n","      <td>9.711006e+11</td>\n","      <td>32255894.0</td>\n","      <td>2023-09-11</td>\n","      <td>2023-09-26</td>\n","      <td>2023-09-12</td>\n","      <td>0010755893</td>\n","      <td>001100511555</td>\n","      <td>23254FA030CG</td>\n","      <td>2023-09-13 06:14:54</td>\n","      <td>...</td>\n","      <td>[361+] Dias</td>\n","      <td>[91 a 180] Dias</td>\n","      <td>Cliente Tag</td>\n","      <td>TSC</td>\n","      <td>Natural</td>\n","      <td>Intereses</td>\n","      <td>Boleta</td>\n","      <td>Tag</td>\n","      <td>Impaga</td>\n","      <td>Impaga</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>2024-01-15 13:52:32.627</td>\n","      <td>9.711006e+11</td>\n","      <td>32255894.0</td>\n","      <td>2023-09-11</td>\n","      <td>2023-09-26</td>\n","      <td>2023-09-12</td>\n","      <td>0010755893</td>\n","      <td>001100511555</td>\n","      <td>23254FA030CG</td>\n","      <td>2023-09-13 06:14:54</td>\n","      <td>...</td>\n","      <td>[361+] Dias</td>\n","      <td>[91 a 180] Dias</td>\n","      <td>Cliente Tag</td>\n","      <td>AVN</td>\n","      <td>Natural</td>\n","      <td>Intereses</td>\n","      <td>Boleta</td>\n","      <td>Tag</td>\n","      <td>Impaga</td>\n","      <td>Impaga</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>2024-01-15 13:52:32.627</td>\n","      <td>9.711006e+11</td>\n","      <td>32255894.0</td>\n","      <td>2023-09-11</td>\n","      <td>2023-09-26</td>\n","      <td>2023-09-12</td>\n","      <td>0010755893</td>\n","      <td>001100511555</td>\n","      <td>23254FA030CG</td>\n","      <td>2023-09-13 06:14:54</td>\n","      <td>...</td>\n","      <td>[361+] Dias</td>\n","      <td>[91 a 180] Dias</td>\n","      <td>Cliente Tag</td>\n","      <td>AVN</td>\n","      <td>Natural</td>\n","      <td>Intereses</td>\n","      <td>Boleta</td>\n","      <td>Tag</td>\n","      <td>Impaga</td>\n","      <td>Impaga</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 39 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a505c25-27b0-46d2-9fd9-97669da8629a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5a505c25-27b0-46d2-9fd9-97669da8629a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5a505c25-27b0-46d2-9fd9-97669da8629a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-482a880d-d8b8-4f84-9243-a91b93408958\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-482a880d-d8b8-4f84-9243-a91b93408958')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-482a880d-d8b8-4f84-9243-a91b93408958 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["uploaded = files.upload()\n","cpi_monthly_df = pd.read_excel('CPI_1998-2024_by_month.xlsx',header=2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"IzCcQylezjWD","executionInfo":{"status":"ok","timestamp":1710928780062,"user_tz":240,"elapsed":6166,"user":{"displayName":"Meixi Peng","userId":"16257172323229150555"}},"outputId":"6e969ece-1ba6-49ba-d790-64ba8c8a1bc8"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-2c67ce62-e0d3-4c70-ae57-f3e43f8c7def\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-2c67ce62-e0d3-4c70-ae57-f3e43f8c7def\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving CPI_1998-2024_by_month.xlsx to CPI_1998-2024_by_month (8).xlsx\n"]}]},{"cell_type":"code","source":["cpi_monthly_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":523},"id":"L53IvITfzjY6","executionInfo":{"status":"ok","timestamp":1710928781874,"user_tz":240,"elapsed":151,"user":{"displayName":"Meixi Peng","userId":"16257172323229150555"}},"outputId":"50d2bc69-71c6-4da3-efa9-c48cfb9f42e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Reg           Descripción series  1998-12-01 00:00:00  1999-01-01 00:00:00  \\\n","0    1  IPC general (empalme BCCh)             41.501964            41.362381   \n","1    2            IPC sin volátiles            42.163022            42.231263   \n","2    3  IPC Servicios sin volátiles            36.897970            36.977523   \n","3    4     IPC Bienes sin volátiles            49.964878            50.009872   \n","4    5                  IPC volátil            40.584872            40.143349   \n","5    6      IPC Alimentos volátiles            28.649860            28.019583   \n","6    7        IPC Energía volátiles            22.440101            22.191209   \n","7    8          IPC Resto volátiles            66.338423            66.129866   \n","\n","   1999-02-01 00:00:00  1999-03-01 00:00:00  1999-04-01 00:00:00  \\\n","0            41.395069            41.657001            41.814018   \n","1            42.378224            42.780558            42.938829   \n","2            37.129437            37.664957            37.781810   \n","3            50.141870            50.286857            50.513584   \n","4            40.004340            40.050563            40.204351   \n","5            27.696545            27.656667            27.584609   \n","6            22.188316            22.298617            22.956295   \n","7            66.190235            66.343145            66.458216   \n","\n","   1999-05-01 00:00:00  1999-06-01 00:00:00  1999-07-01 00:00:00  ...  \\\n","0            41.863086            41.922713            41.950110  ...   \n","1            42.956713            43.031505            43.000316  ...   \n","2            37.742168            37.852110            37.786216  ...   \n","3            50.634795            50.642951            50.675810  ...   \n","4            40.331268            40.370482            40.477928  ...   \n","5            27.534515            27.483186            27.409696  ...   \n","6            23.110591            23.079484            23.706390  ...   \n","7            66.837201            67.089331            67.060485  ...   \n","\n","   2023-04-01 00:00:00  2023-05-01 00:00:00  2023-06-01 00:00:00  \\\n","0            99.770248           100.091037            99.658900   \n","1            99.910687           100.367210           100.386948   \n","2            99.593053            99.972371           100.314782   \n","3           100.323971           100.880949           100.480846   \n","4            99.539666            99.639526            98.467521   \n","5            98.247791            97.848137            98.031536   \n","6            99.831882            99.272317            97.453792   \n","7           100.637793           101.588114            99.451401   \n","\n","   2023-07-01 00:00:00  2023-08-01 00:00:00  2023-09-01 00:00:00  \\\n","0            99.777989            99.895604           100.530512   \n","1           100.603982           100.497824           100.691035   \n","2           100.746145           100.939398           101.292677   \n","3           100.419010            99.923278            99.908218   \n","4            98.427202            98.910304           100.268428   \n","5            99.341190            99.943845           101.469667   \n","6            96.013286            97.805112           100.097662   \n","7            98.867198            98.512212            99.191688   \n","\n","   2023-10-01 00:00:00  2023-11-01 00:00:00  2023-12-01 00:00:00  \\\n","0           100.824992           101.576395           101.042359   \n","1           100.657433           101.166219           100.891219   \n","2           101.403860           101.746629           101.946127   \n","3            99.686233           100.411030            99.518643   \n","4           101.097676           102.247173           101.290447   \n","5           102.146283           103.501065           102.659278   \n","6           102.723938           103.328336           102.480090   \n","7            99.178934           100.428869            99.300298   \n","\n","   2024-01-01 00:00:00  \n","0           101.717870  \n","1           101.624003  \n","2           102.490976  \n","3           100.495955  \n","4           101.871578  \n","5           103.547597  \n","6           102.041840  \n","7           100.144030  \n","\n","[8 rows x 304 columns]"],"text/html":["\n","  <div id=\"df-ef19b39c-edf0-46ae-845a-516f0f9f4cee\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Reg</th>\n","      <th>Descripción series</th>\n","      <th>1998-12-01 00:00:00</th>\n","      <th>1999-01-01 00:00:00</th>\n","      <th>1999-02-01 00:00:00</th>\n","      <th>1999-03-01 00:00:00</th>\n","      <th>1999-04-01 00:00:00</th>\n","      <th>1999-05-01 00:00:00</th>\n","      <th>1999-06-01 00:00:00</th>\n","      <th>1999-07-01 00:00:00</th>\n","      <th>...</th>\n","      <th>2023-04-01 00:00:00</th>\n","      <th>2023-05-01 00:00:00</th>\n","      <th>2023-06-01 00:00:00</th>\n","      <th>2023-07-01 00:00:00</th>\n","      <th>2023-08-01 00:00:00</th>\n","      <th>2023-09-01 00:00:00</th>\n","      <th>2023-10-01 00:00:00</th>\n","      <th>2023-11-01 00:00:00</th>\n","      <th>2023-12-01 00:00:00</th>\n","      <th>2024-01-01 00:00:00</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>IPC general (empalme BCCh)</td>\n","      <td>41.501964</td>\n","      <td>41.362381</td>\n","      <td>41.395069</td>\n","      <td>41.657001</td>\n","      <td>41.814018</td>\n","      <td>41.863086</td>\n","      <td>41.922713</td>\n","      <td>41.950110</td>\n","      <td>...</td>\n","      <td>99.770248</td>\n","      <td>100.091037</td>\n","      <td>99.658900</td>\n","      <td>99.777989</td>\n","      <td>99.895604</td>\n","      <td>100.530512</td>\n","      <td>100.824992</td>\n","      <td>101.576395</td>\n","      <td>101.042359</td>\n","      <td>101.717870</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>IPC sin volátiles</td>\n","      <td>42.163022</td>\n","      <td>42.231263</td>\n","      <td>42.378224</td>\n","      <td>42.780558</td>\n","      <td>42.938829</td>\n","      <td>42.956713</td>\n","      <td>43.031505</td>\n","      <td>43.000316</td>\n","      <td>...</td>\n","      <td>99.910687</td>\n","      <td>100.367210</td>\n","      <td>100.386948</td>\n","      <td>100.603982</td>\n","      <td>100.497824</td>\n","      <td>100.691035</td>\n","      <td>100.657433</td>\n","      <td>101.166219</td>\n","      <td>100.891219</td>\n","      <td>101.624003</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>IPC Servicios sin volátiles</td>\n","      <td>36.897970</td>\n","      <td>36.977523</td>\n","      <td>37.129437</td>\n","      <td>37.664957</td>\n","      <td>37.781810</td>\n","      <td>37.742168</td>\n","      <td>37.852110</td>\n","      <td>37.786216</td>\n","      <td>...</td>\n","      <td>99.593053</td>\n","      <td>99.972371</td>\n","      <td>100.314782</td>\n","      <td>100.746145</td>\n","      <td>100.939398</td>\n","      <td>101.292677</td>\n","      <td>101.403860</td>\n","      <td>101.746629</td>\n","      <td>101.946127</td>\n","      <td>102.490976</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>IPC Bienes sin volátiles</td>\n","      <td>49.964878</td>\n","      <td>50.009872</td>\n","      <td>50.141870</td>\n","      <td>50.286857</td>\n","      <td>50.513584</td>\n","      <td>50.634795</td>\n","      <td>50.642951</td>\n","      <td>50.675810</td>\n","      <td>...</td>\n","      <td>100.323971</td>\n","      <td>100.880949</td>\n","      <td>100.480846</td>\n","      <td>100.419010</td>\n","      <td>99.923278</td>\n","      <td>99.908218</td>\n","      <td>99.686233</td>\n","      <td>100.411030</td>\n","      <td>99.518643</td>\n","      <td>100.495955</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>IPC volátil</td>\n","      <td>40.584872</td>\n","      <td>40.143349</td>\n","      <td>40.004340</td>\n","      <td>40.050563</td>\n","      <td>40.204351</td>\n","      <td>40.331268</td>\n","      <td>40.370482</td>\n","      <td>40.477928</td>\n","      <td>...</td>\n","      <td>99.539666</td>\n","      <td>99.639526</td>\n","      <td>98.467521</td>\n","      <td>98.427202</td>\n","      <td>98.910304</td>\n","      <td>100.268428</td>\n","      <td>101.097676</td>\n","      <td>102.247173</td>\n","      <td>101.290447</td>\n","      <td>101.871578</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>IPC Alimentos volátiles</td>\n","      <td>28.649860</td>\n","      <td>28.019583</td>\n","      <td>27.696545</td>\n","      <td>27.656667</td>\n","      <td>27.584609</td>\n","      <td>27.534515</td>\n","      <td>27.483186</td>\n","      <td>27.409696</td>\n","      <td>...</td>\n","      <td>98.247791</td>\n","      <td>97.848137</td>\n","      <td>98.031536</td>\n","      <td>99.341190</td>\n","      <td>99.943845</td>\n","      <td>101.469667</td>\n","      <td>102.146283</td>\n","      <td>103.501065</td>\n","      <td>102.659278</td>\n","      <td>103.547597</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7</td>\n","      <td>IPC Energía volátiles</td>\n","      <td>22.440101</td>\n","      <td>22.191209</td>\n","      <td>22.188316</td>\n","      <td>22.298617</td>\n","      <td>22.956295</td>\n","      <td>23.110591</td>\n","      <td>23.079484</td>\n","      <td>23.706390</td>\n","      <td>...</td>\n","      <td>99.831882</td>\n","      <td>99.272317</td>\n","      <td>97.453792</td>\n","      <td>96.013286</td>\n","      <td>97.805112</td>\n","      <td>100.097662</td>\n","      <td>102.723938</td>\n","      <td>103.328336</td>\n","      <td>102.480090</td>\n","      <td>102.041840</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>8</td>\n","      <td>IPC Resto volátiles</td>\n","      <td>66.338423</td>\n","      <td>66.129866</td>\n","      <td>66.190235</td>\n","      <td>66.343145</td>\n","      <td>66.458216</td>\n","      <td>66.837201</td>\n","      <td>67.089331</td>\n","      <td>67.060485</td>\n","      <td>...</td>\n","      <td>100.637793</td>\n","      <td>101.588114</td>\n","      <td>99.451401</td>\n","      <td>98.867198</td>\n","      <td>98.512212</td>\n","      <td>99.191688</td>\n","      <td>99.178934</td>\n","      <td>100.428869</td>\n","      <td>99.300298</td>\n","      <td>100.144030</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 304 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef19b39c-edf0-46ae-845a-516f0f9f4cee')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ef19b39c-edf0-46ae-845a-516f0f9f4cee button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ef19b39c-edf0-46ae-845a-516f0f9f4cee');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1df6e4d2-8190-498b-87c3-3475aea755d7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1df6e4d2-8190-498b-87c3-3475aea755d7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1df6e4d2-8190-498b-87c3-3475aea755d7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"cpi_monthly_df"}},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["print(df_v.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rs3LCpCA-UNk","executionInfo":{"status":"ok","timestamp":1710928785242,"user_tz":240,"elapsed":342,"user":{"displayName":"Meixi Peng","userId":"16257172323229150555"}},"outputId":"05644b4c-b8e1-4d42-b5d5-34f28df88154"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['\"FechaExtraccion\"', '\"NumeroDocumento\"', '\"NumeroFolio\"', '\"FechaEmision\"', '\"FechaVencimiento\"', '\"FechaRegistro\"', '\"BusinessPartnerId\"', '\"CuentaContrato\"', '\"ClaveReconciliacion\"', '\"Cabecera_FechaHoraCreacion\"', '\"Cabecera_FechaHoraUltimaModificacion\"', '\"PosicionDocumento\"', '\"ImportePesos\"', '\"DocumentoCompensacion\"', '\"FechaCompensacion\"', '\"DiasCompensacion\"', '\"OperacionPrincipal\"', '\"OperacionParcial\"', '\"Detalle_FechaHoraCreacion\"', '\"Detalle_FechaHoraUltimaModificacion\"', 'RUT', '\"Direccion\"', 'COMUNA', 'CIUDAD', 'REGION', '\"Nombre\"', '\"CantidadCuentasContrato\"', '\"MaxCategoriaVehiculo\"', '\"CantidadVehiculos\"', '\"TramoMoraCliente\"', '\"TramoMora\"', '\"Inhabilitado\"', '\"Concesionaria\"', '\"TipoCliente\"', '\"TipoOperacion\"', '\"TipoDocumento\"', '\"TipoProducto\"', '\"StatusCompensacion\"', '\"StatusCompensacionTmp\"']\n"]}]},{"cell_type":"code","source":["# Alias each column to remove the quotation marks and select them\n","df_v = df_v.select([F.col(col_name).alias(col_name.replace('\"', '')) for col_name in df_v.columns])"],"metadata":{"id":"9Ct1vUVVzjeo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(df_v.columns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6J9iN-9a-vIs","executionInfo":{"status":"ok","timestamp":1710928787351,"user_tz":240,"elapsed":130,"user":{"displayName":"Meixi Peng","userId":"16257172323229150555"}},"outputId":"a06e57f9-f94e-48ea-97f8-120ad51a7805"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['FECHAEXTRACCION', 'NUMERODOCUMENTO', 'NUMEROFOLIO', 'FECHAEMISION', 'FECHAVENCIMIENTO', 'FECHAREGISTRO', 'BUSINESSPARTNERID', 'CUENTACONTRATO', 'CLAVERECONCILIACION', 'CABECERA_FECHAHORACREACION', 'CABECERA_FECHAHORAULTIMAMODIFICACION', 'POSICIONDOCUMENTO', 'IMPORTEPESOS', 'DOCUMENTOCOMPENSACION', 'FECHACOMPENSACION', 'DIASCOMPENSACION', 'OPERACIONPRINCIPAL', 'OPERACIONPARCIAL', 'DETALLE_FECHAHORACREACION', 'DETALLE_FECHAHORAULTIMAMODIFICACION', 'RUT', 'DIRECCION', 'COMUNA', 'CIUDAD', 'REGION', 'NOMBRE', 'CANTIDADCUENTASCONTRATO', 'MAXCATEGORIAVEHICULO', 'CANTIDADVEHICULOS', 'TRAMOMORACLIENTE', 'TRAMOMORA', 'INHABILITADO', 'CONCESIONARIA', 'TIPOCLIENTE', 'TIPOOPERACION', 'TIPODOCUMENTO', 'TIPOPRODUCTO', 'STATUSCOMPENSACION', 'STATUSCOMPENSACIONTMP']\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"7xe335j5-vTM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":382},"id":"maOc0zfh-vY-","executionInfo":{"status":"error","timestamp":1710929720109,"user_tz":240,"elapsed":166,"user":{"displayName":"Meixi Peng","userId":"16257172323229150555"}},"outputId":"aab0fdae-7e31-4389-86db-8e7eb334fa36"},"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"time data 'index' does not match format '%Y-%m-%d'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-113-09c4cf6256b2>\u001b[0m in \u001b[0;36m<cell line: 3>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Step 1: Convert the first row of cpi_monthly_df to a dictionary, skipping non-date columns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mcpi_row\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcpi_monthly_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m  \u001b[0;31m# First row which contains the CPI values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mcpi_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0mdatetime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdatetime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstrptime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'%Y-%m-%d'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mcpi_row\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mcol\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcpi_row\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mcol\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'Reg'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Descripción series'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Step 2: Define the UDF\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-113-09c4cf6256b2>\u001b[0m in \u001b[0;36m<dictcomp>\u001b[0;34m(.0)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# Step 1: Convert the first row of cpi_monthly_df to a dictionary, skipping non-date columns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mcpi_row\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcpi_monthly_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0miloc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m  \u001b[0;31m# First row which contains the CPI values\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mcpi_dict\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0mdatetime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdatetime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstrptime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'%Y-%m-%d'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mcpi_row\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcol\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mcol\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mcpi_row\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mcol\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m'Reg'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'Descripción series'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m# Step 2: Define the UDF\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/_strptime.py\u001b[0m in \u001b[0;36m_strptime_datetime\u001b[0;34m(cls, data_string, format)\u001b[0m\n\u001b[1;32m    566\u001b[0m     \"\"\"Return a class cls instance based on the input string and the\n\u001b[1;32m    567\u001b[0m     format string.\"\"\"\n\u001b[0;32m--> 568\u001b[0;31m     \u001b[0mtt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfraction\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgmtoff_fraction\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_strptime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_string\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mformat\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    569\u001b[0m     \u001b[0mtzname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgmtoff\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtt\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    570\u001b[0m     \u001b[0margs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtt\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m6\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mfraction\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/lib/python3.10/_strptime.py\u001b[0m in \u001b[0;36m_strptime\u001b[0;34m(data_string, format)\u001b[0m\n\u001b[1;32m    347\u001b[0m     \u001b[0mfound\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mformat_regex\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmatch\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_string\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    348\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mfound\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 349\u001b[0;31m         raise ValueError(\"time data %r does not match format %r\" %\n\u001b[0m\u001b[1;32m    350\u001b[0m                          (data_string, format))\n\u001b[1;32m    351\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata_string\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mfound\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: time data 'index' does not match format '%Y-%m-%d'"]}]},{"cell_type":"code","source":[],"metadata":{"id":"i_JJMx26DIZj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"D4sog6KpDJCJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"xSb3kw2zDJP1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Czhs4SUpDJcn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"JJPLGi3HDJkW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"kNbt73zr-vd6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"fbKvUz0Y-vo0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"SBAY53DL-vsQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"2uHwHBsZ-vwe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"FaVPGIkm-wEz"},"execution_count":null,"outputs":[]}]}